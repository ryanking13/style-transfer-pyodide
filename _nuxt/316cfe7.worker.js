!function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(object,e){return Object.prototype.hasOwnProperty.call(object,e)},r.p="/_nuxt/",r(r.s=0)}([function(e,t){importScripts("https://cdn.jsdelivr.net/pyodide/dev/full/pyodide.js");const r=async function(){self.pyodide=await loadPyodide()}();self.onmessage=async e=>{await r;const{action:t,message:o}=e.data;try{switch(t){case"runPython":{await self.pyodide.loadPackagesFromImports(o);const t=await self.pyodide.runPythonAsync(o);e.ports[0].postMessage({results:t});break}case"unpack":self.pyodide.unpackArchive(o.buffer,o.format),e.ports[0].postMessage({results:null});break;case"readFile":{const t=new Blob([self.pyodide.FS.readFile(o.path)],{type:o.type});e.ports[0].postMessage({results:t});break}case"writeFile":self.pyodide.FS.writeFile(o.path,o.buffer,{flags:"w"}),e.ports[0].postMessage({results:null});break;default:e.ports[0].postMessage({results:null})}}catch(t){e.ports[0].postMessage({error:t.message})}}}]);